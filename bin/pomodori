#!/usr/bin/env ruby
ROOT = File.absolute_path(File.dirname(__FILE__) + "/..")
STDOUT.sync = STDERR.sync = true
ENV['POMODORI_PWD'] = Dir.pwd

if RUBY_VERSION < '1.9'
  abort "This program requires Ruby 1.9 or later."
end

require_relative '../lib/constants'

module Pomodori
  class App
    def initialize(argv)
      @argv = argv.dup
    end

    def run
      prepare
      dispatch_command
    end

  private
    def prepare
      @command = @argv[0]
      @argv.shift
    end

    def dispatch_command
      case @command
      when "init"
        require_relative '../commands/init/command'
        Pomodori::Commands::InitCommand.new(@argv).run
      when "setup"
        setup_bundler
        require_relative '../commands/setup/command'
        Pomodori::Commands::SetupCommand.new(@argv).run
      when "push"
        setup_bundler
        require_relative '../commands/push/command'
        Pomodori::Commands::PushCommand.new(@argv).run
      when "deploy"
        setup_bundler
        require_relative '../commands/deploy/command'
        Pomodori::Commands::DeployCommand.new(@argv).run
      when "migrate"
        abort "Not yet implemented."
      when "help", "-h", "--help"
        help
      else
        help
        exit(1)
      end
    end

    def help
      puts "Usage: pomodori <SUBCOMMAND> [OPTIONS...]"
      puts
      puts "Available subcommands:"
      puts
      puts "  init     Create a #{POMODORI_APP_NAME} config file"
      puts "  setup    Prepare servers with necessary stuff"
      puts "  push     Push app code to the server. Does not deploy your app"
      puts "  deploy   Deploy a new app release"
      puts
      puts "Type `pomodori <SUBCOMMAND> --help` to learn more about a specific subcommand."
      puts
      puts "-------------- TURORIAL --------------"
      puts "Using #{POMODORI_APP_NAME} for the first time? Here's what you should do:"
      puts " 1. Run `pomodori init`"
      puts " 2. Edit pomodori.json"
      puts " 3. Run `pomodori deploy`"
    end

    def setup_bundler
      if !defined?(Bundler)
        ENV['BUNDLE_GEMFILE'] = "#{ROOT}/Gemfile"
        require 'bundler/setup'
      end
    end
  end
end

Pomodori::App.new(ARGV).run
